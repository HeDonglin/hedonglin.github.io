<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[wgestures快捷手势]]></title>
      <url>/2017/06/17/wgestures%E5%BF%AB%E6%8D%B7%E6%89%8B%E5%8A%BF/</url>
      <content type="html"><![CDATA[<h2 id="打开网址，随时随地选中文字即可搜索"><a href="#打开网址，随时随地选中文字即可搜索" class="headerlink" title="打开网址，随时随地选中文字即可搜索"></a>打开网址，随时随地选中文字即可搜索<br></h2><p><img src="/images/wgestures.png"></p>
<h2 id="触发边角切换工作状态"><a href="#触发边角切换工作状态" class="headerlink" title="触发边角切换工作状态 "></a>触发边角切换工作状态 <br></h2><p><img src="/images/wgestures-1.png"></p>
<h2 id="编写脚本使用鼠标免去重复的操作"><a href="#编写脚本使用鼠标免去重复的操作" class="headerlink" title="编写脚本使用鼠标免去重复的操作 "></a>编写脚本使用鼠标免去重复的操作 <br></h2><p><img src="/images/wgestures-2.png"></p>
]]></content>
      
        <categories>
            
            <category> 实用工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> wgestures </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[altdrag被人遗忘的好工具]]></title>
      <url>/2017/06/17/altdrag%E8%A2%AB%E4%BA%BA%E9%81%97%E5%BF%98%E7%9A%84%E7%BD%AE%E9%A1%B6%E5%A5%BD%E5%B7%A5%E5%85%B7/</url>
      <content type="html"><![CDATA[<h2 id="Altdrag"><a href="#Altdrag" class="headerlink" title="Altdrag"></a>Altdrag</h2><p>有时候一些窗口需要置顶以及取消置顶的操作，找遍了全网只有这个是最满意的，win10下完美支持<br>软件大小：190kb<br>主要有几大功能<br>1.自动调整适应共8个位置<br>2.窗口置顶（致爱）<br>使用方法：如下图所示，除了红色文字标出的是鼠标中间单击，其他都配合按键使用，下图我配置的是win键，即win键+鼠标的方式；<br><img src="/images/altdrag.png"></p>
<h2 id="更多详情"><a href="#更多详情" class="headerlink" title="更多详情"></a>更多详情</h2><p>官网：<a href="https://stefansundin.github.io/altdrag/" target="_blank" rel="external">https://stefansundin.github.io/altdrag/</a></p>
]]></content>
      
        <categories>
            
            <category> 实用工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> altdrag </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[snipaste截图、贴图神器]]></title>
      <url>/2017/06/17/snipaste%E6%88%AA%E5%9B%BE%E3%80%81%E8%B4%B4%E5%9B%BE%E7%A5%9E%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h2><p><img src="/images/snipaste.gif"></p>
<h2 id="快速取到颜色值，c复制颜色，shift切换颜色方式"><a href="#快速取到颜色值，c复制颜色，shift切换颜色方式" class="headerlink" title="快速取到颜色值，c复制颜色，shift切换颜色方式"></a>快速取到颜色值，c复制颜色，shift切换颜色方式</h2><p><img src="/images/snipaste-1.gif"></p>
<h2 id="更多功能"><a href="#更多功能" class="headerlink" title="更多功能"></a>更多功能</h2><p>官网：<a href="https://zh.snipaste.com/" target="_blank" rel="external">https://zh.snipaste.com/</a><br>文档：<a href="https://docs.snipaste.com/zh-cn#/" target="_blank" rel="external">https://docs.snipaste.com/zh-cn#/</a><br>github反馈：<a href="https://github.com/Snipaste/feedback/issues" target="_blank" rel="external">https://github.com/Snipaste/feedback/issues</a></p>
]]></content>
      
        <categories>
            
            <category> 实用工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> snipaste </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git配置快捷命令]]></title>
      <url>/2017/06/17/git%E9%85%8D%E7%BD%AE%E5%BF%AB%E6%8D%B7%E5%91%BD%E4%BB%A4/</url>
      <content type="html"><![CDATA[<h2 id="相关术语"><a href="#相关术语" class="headerlink" title="相关术语"></a>相关术语</h2><p> <strong>git的历史记录</strong>是不可修改的，也就是说你不能更改任何已经发生的事情。你做的任何操作都只是在原来的操作上修改。也就是说，即使你删除了一个分支，修改了一个提交，或者强制重置，你仍然可以回滚这些操作。<br><strong>切换</strong>：初始创建一个分支，但git库还没有数据，叫切换；<br><strong>检出</strong>：该分支之前已经提交过git库，那么检出就是经历了到仓库里取数据的过程；<br><strong>HEAD</strong>：是指向当前所在的分支<br><strong>git查找配置信息顺序</strong>先<code>etc\gitconfig</code>–&gt;<code>Administrator\.gitconfig</code>–&gt;<code>.git\config</code>;定义的值有冲突,那么后面的覆盖前面的;<br><strong>初始化后</strong>最好要进行一次提交，避免使用了<code>git reset --hard</code>把文件给清除了；</p>
<h2 id="配置快捷命令："><a href="#配置快捷命令：" class="headerlink" title="配置快捷命令："></a>配置快捷命令：</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//转到用户名文件夹下</div><div class="line">cd ~</div><div class="line">//新建文件.bashrc</div><div class="line">touch .bashrc</div><div class="line">//快捷方式设置gs快捷命名是git status；alias gs=&apos;git status&apos;</div><div class="line">//例如alias gl=&apos;git log --oneline --decorate --graph&apos; 当输入gl后面还可以输入其他参数，比如gl -3表示显示最近3条记录</div><div class="line">//alias不加参数可以显示所有配置命令</div></pre></td></tr></table></figure>
<h2 id="barshrc文件配置信息"><a href="#barshrc文件配置信息" class="headerlink" title=".barshrc文件配置信息"></a>.barshrc文件配置信息</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">alias in=&quot;git init&quot;</div><div class="line">alias cl=&quot;git clone&quot;</div><div class="line">alias t=&quot;touch&quot;</div><div class="line">alias tg=&quot;git tag&quot;</div><div class="line"># 常用命令</div><div class="line">alias a=&quot;git add&quot;</div><div class="line">alias s=&quot;git status&quot;</div><div class="line">alias st=&quot;git stash&quot;</div><div class="line">alias stl=&quot;git stash list&quot;</div><div class="line">alias sta=&quot;git stash apply&quot;</div><div class="line">alias stc=&quot;git stash clear&quot;</div><div class="line">alias d=&quot;git diff&quot;</div><div class="line">alias dc=&quot;git diff --cached&quot;</div><div class="line">alias co=&quot;git commit -m&quot;</div><div class="line">alias l=&quot;git log --oneline --decorate --graph&quot;</div><div class="line">alias r=&quot;git reflog&quot;</div><div class="line">alias lf=&quot;git log --pretty=format:&apos;%cn--%h--%cd&apos;&quot;</div><div class="line">alias sl=&quot;git shortlog&quot;</div><div class="line">alias la=&quot;git log --author&quot;</div><div class="line">alias laf=&quot;git log --after&quot;</div><div class="line">alias lbe=&quot;git log --before&quot;</div><div class="line">alias b=&quot;git branch&quot;</div><div class="line">alias bv=&quot;git branch -vv&quot;</div><div class="line">alias bs=&quot;git branch --set-upstream&quot;</div><div class="line">alias c=&quot;git checkout&quot;</div><div class="line">alias cb=&quot;git checkout -b&quot;</div><div class="line">alias cm=&quot;git checkout master&quot;</div><div class="line">alias f=&quot;git fetch&quot;</div><div class="line">alias rem=&quot;git remote&quot;</div><div class="line">alias m=&quot;git merge&quot;</div><div class="line">alias rm=&quot;git rm&quot;</div><div class="line">alias rmf=&quot;git rm -f&quot;</div><div class="line">alias rmc=&quot;git rm --cached&quot;</div><div class="line">alias re=&quot;git reset&quot;</div><div class="line">alias reh=&quot;re --hard&quot;</div><div class="line">alias pl=&quot;git pull&quot;</div><div class="line">alias ps=&quot;git push&quot;</div><div class="line"></div><div class="line"># .git目录下配置</div><div class="line">alias g=&quot;git config&quot;</div><div class="line">alias g1.0=&quot;g credential.helper store&quot;</div><div class="line">alias g1.1=&quot;g core.autocrlf false&quot;</div><div class="line">alias g1.2=&quot;g core.quotepath false&quot;</div><div class="line">alias g1.3=&quot;g core.editor \&quot;&apos;D:\\Program Files\\Sublime Text 3126\\sublime_text.exe&apos; -w\&quot;&quot;</div><div class="line">alias g1.4=&quot;g core.safecrlf false&quot;</div><div class="line">alias g1.5=&quot;g push.default simple&quot;</div><div class="line">alias g1.6=&quot;g user.email aaa@163.com&quot;</div><div class="line">alias g1.7=&quot;g user.name aaa&quot;</div><div class="line">alias gl=&quot;g1.0 &amp;&amp; g1.1 &amp;&amp; g1.2 &amp;&amp; g1.3 &amp;&amp; g1.4 &amp;&amp; g1.5 &amp;&amp; g1.6 &amp;&amp;g1.7&quot;</div><div class="line">alias gue=&quot;g user.email&quot;</div><div class="line">alias gun=&quot;g user.name&quot;</div><div class="line"></div><div class="line"># 全局配置</div><div class="line">alias cg=&quot;git config --global&quot;</div><div class="line">alias g2.0=&quot;cg credential.helper store&quot;</div><div class="line">alias g2.1=&quot;cg core.autocrlf false&quot;</div><div class="line">alias g2.2=&quot;cg core.quotepath false&quot;</div><div class="line">alias g2.3=&quot;cg core.editor \&quot;&apos;D:\\Program Files\\Sublime Text 3126\\sublime_text.exe&apos; -w\&quot;&quot;</div><div class="line">alias g2.4=&quot;cg core.safecrlf false&quot;</div><div class="line">alias g2.5=&quot;cg push.default simple&quot;</div><div class="line">alias g2.6=&quot;cg user.email aaa@163.com&quot;</div><div class="line">alias g2.7=&quot;cg user.name aaa&quot;</div><div class="line">alias gg=&quot;g2.0 &amp;&amp; g2.1 &amp;&amp; g2.2 &amp;&amp; g2.3 &amp;&amp; g2.4 &amp;&amp; g2.5 &amp;&amp; g2.6 &amp;&amp;g2.7&quot;</div><div class="line">alias ggue=&quot;cg user.email&quot;</div><div class="line">alias ggun=&quot;cg user.name&quot;</div></pre></td></tr></table></figure>
<h2 id="出现问题后解决思路"><a href="#出现问题后解决思路" class="headerlink" title="出现问题后解决思路:"></a>出现问题后解决思路:</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">是否添加了主机：git remote -v</div><div class="line">添加主机：git remote add origin git@github.com:xyhdl0929/xyhdl0929.github.io.git</div><div class="line">远程是否有了该分支：git push origin 本地分支：远程分支</div><div class="line">是否有追踪的分支：git branch -vv</div><div class="line">建立追踪分支：git branch --set-upstream 本地分支 origin/远程分支</div><div class="line">本地新建立一个分支追踪远程分支：git checkout -b &lt;新的分支名&gt; 远程主机名/分支名</div><div class="line">本地数据是否为最新：git pull</div><div class="line">设置本地默认主机：git push -u origin</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 辅助工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git理解图]]></title>
      <url>/2017/06/17/git%E7%90%86%E8%A7%A3%E5%9B%BE/</url>
      <content type="html"><![CDATA[<h2 id="一边操作一边理解"><a href="#一边操作一边理解" class="headerlink" title="一边操作一边理解"></a>一边操作一边理解</h2><p><img src="/images/git-1.png" alt="git理解图" title="git理解图"></p>
<h2 id="本地创建公钥-提供到服务端-可删除但不建议-和密钥-克隆下来的文件会根据已提交到服务端的公钥去匹配相应的密钥"><a href="#本地创建公钥-提供到服务端-可删除但不建议-和密钥-克隆下来的文件会根据已提交到服务端的公钥去匹配相应的密钥" class="headerlink" title="本地创建公钥(提供到服务端,可删除但不建议),和密钥(克隆下来的文件会根据已提交到服务端的公钥去匹配相应的密钥)"></a>本地创建公钥(提供到服务端,可删除但不建议),和密钥(克隆下来的文件会根据已提交到服务端的公钥去匹配相应的密钥)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">//~代表用户名目录下,$HOME 用户目录变量,下面表示转到用户目录的.ssh文件夹下</div><div class="line">cd ~/.shh</div><div class="line">//创建一个公钥</div><div class="line">    ssh-keygen -t rsa -C &quot;注释,标识身份,一般添github上的邮箱地址&quot;</div><div class="line">//创建多个公钥(相当于1台电脑可以控制两个github账户)</div><div class="line">    ssh-keygen -t rsa -C &quot;aaa@163.com&quot; //一路回车,那么默认文件命名为id_rsa</div><div class="line">    ssh-keygen -t rsa -C &quot;bbb@163.com&quot; //回车后要求为文件进行命名可设置为id2_rsa</div><div class="line">    //当克隆下来的文件时:git@github.com:xyhdl0929/abc.git会寻找本机中的ssh秘钥</div><div class="line">    //在.ssh文件夹下新建config文件添加以下信息;</div><div class="line">        # 第一个账号，默认使用的账号</div><div class="line">            Host github.com</div><div class="line">            HostName github.com</div><div class="line">            User git</div><div class="line">            IdentityFile ~/.ssh/id_rsa #对应github第一个账号</div><div class="line">        # 第二个账号</div><div class="line">            Host n.github.com  #n为前缀名，可以任意设置</div><div class="line">            HostName github.com</div><div class="line">            User git</div><div class="line">            IdentityFile ~/.ssh/id2_rsa #对应github第二个账号</div></pre></td></tr></table></figure>
<h2 id="远程服务器github设置"><a href="#远程服务器github设置" class="headerlink" title="远程服务器github设置;"></a>远程服务器github设置;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//把公钥(*.pub的文件就是公钥)内容添加到ssh中,title名字用户身份填写;</div><div class="line">Settings--&gt;SSH and GPG keys--&gt;New SSH key--title(随意,一般写哪个用户使用的公钥)--&gt;粘贴公钥</div><div class="line">//github上新建一个仓库</div><div class="line">New repository--&gt;Repository name(随意)--&gt;create pository</div><div class="line">//复制ssh地址;例如git@github.com:HeDonglin/muban.git</div><div class="line">clone or download--&gt;copy to clipboard</div></pre></td></tr></table></figure>
<h2 id="初始化及忽略文件设置"><a href="#初始化及忽略文件设置" class="headerlink" title="初始化及忽略文件设置"></a>初始化及忽略文件设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">//初始化命令在文件夹里生成一个隐藏的.git文件夹，这是一个全新的状态，不管该文件夹有没有文件；</div><div class="line">    git init</div><div class="line">//添加忽略的文件</div><div class="line">    //未跟踪状态的忽略设置:</div><div class="line">        .gitignore //都需要忽略的文件,建立方式(.gitignore.),该文件和.git文件夹同级</div><div class="line">            .css //例如:使用less编译,最终生成css,那么可以忽略编译生成的中间文件/可执行文件;</div><div class="line">        exclde //本地仓库需要忽略的文件,该文件在.git/info中;</div><div class="line">            dist/</div><div class="line">            build/</div><div class="line">            node_modules/</div><div class="line">    //已跟踪状态的忽略设置:(比如克隆下来的文件都是属于跟踪状态,没改变也没在已暂存)</div><div class="line">        //对已改变的文件进行忽略跟踪,但还可以进行恢复跟踪,说明还保留在已跟踪状态只是对他进行了忽略而已,并没设置为未跟踪状态;</div><div class="line">            git update-index --assume-unchanged &lt;file&gt;//忽略跟踪</div><div class="line">            git update-index --no-assume-unchanged &lt;file&gt;//恢复跟踪</div><div class="line">        //对已暂存的文件或文件夹移出已暂存并设置为未跟踪状态,不删除文件,那么上面的的两条命令就无效了,因为彻底地设置为未跟踪状态;</div><div class="line">            git rm --cached &lt;文件&gt;</div><div class="line">            git rm --cached &lt;文件夹&gt; -r</div></pre></td></tr></table></figure>
<h2 id="配置信息大全"><a href="#配置信息大全" class="headerlink" title="配置信息大全"></a>配置信息大全</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">//查看所有配置信息,看是否有使用过的用户记录;</div><div class="line">    git config --list </div><div class="line"></div><div class="line">//git命令自动纠错，如：gitstats会被自动纠正成git status执行</div><div class="line">    Git config --global help.autocorrect</div><div class="line"></div><div class="line">//.git文件夹下config设置配置，具有优先权</div><div class="line">    git config user.name &quot;用户名&quot; </div><div class="line">    git config user.email &quot;邮箱地址&quot; </div><div class="line">//用户者是谁,方便记录谁操作了仓库（必须）</div><div class="line">    git config --global user.name &quot;用户名&quot; </div><div class="line">//用户的邮箱地址,方便记录使用者邮箱地址（必须）</div><div class="line">    git config --global user.email &quot;邮箱地址&quot; </div><div class="line">//删除全局配置文件中的使用者信息</div><div class="line">    git config --global --unset user.name </div><div class="line">//删除全局配置文件中的使用者的邮件地址</div><div class="line">    git config --global --unset user.email </div><div class="line"></div><div class="line">//免用户名和密码登录github（必须）</div><div class="line">    git config --global credential.helper store </div><div class="line"></div><div class="line">//是否忽略文件夹大小写敏感，false表示不忽略也就是对大小写敏感，false即是所有平台使用（跨平台必须）</div><div class="line">    git config --global core.ignorecase false</div><div class="line"></div><div class="line">//git add 时候LF 会被转化成 CRLF；</div><div class="line">//git checkout切换分支时候，换行符转化为 CRLF；</div><div class="line">//git commit 提交时候CRLF转LF</div><div class="line">//因为远程仓库一般都是纯的LF,在window下编辑器（如sublime text）使用LF设置即可；这时候就不需要git进行转换了；所以设置false即可</div><div class="line">//提交时转换为LF，检出时转换为CRLF（window下设置，编辑不是LF的时候设置）</div><div class="line">    git config --global core.autocrlf true</div><div class="line">//提交时转换为LF，检出时不转换（非window下设置）</div><div class="line">    git config --global core.autocrlf input</div><div class="line">//提交检出均不转换</div><div class="line">    git config --global core.autocrlf false</div><div class="line"></div><div class="line">//由于上面已经保证了，所有文件都采用LF了这里可以设置为false;如果为了安全起见可以使用warn来提醒哪些文件采用混合换行符</div><div class="line">//拒绝提交包含混合换行符的文件（跨平台）</div><div class="line">    git config --global core.safecrlf true</div><div class="line">//允许提交包含混合换行符的文件</div><div class="line">    git config --global core.safecrlf false</div><div class="line">//提交包含混合换行符的文件时给出警告</div><div class="line">    git config --global core.safecrlf warn</div><div class="line"></div><div class="line">//默认使用哪种编辑器打开便于对内容修改(必须)</div><div class="line">    git config --global core.editor &quot;&apos;D:\Program Files\Sublime Text 3126\sublime_text.exe&apos; -w&quot;</div><div class="line"></div><div class="line">//push推送到远程主机的时候设置simple模式，，只有当前分支会被 push；（必须）</div><div class="line">    git config --global push.default simple</div><div class="line">//push推送到远程主机的时候设置matching模式，把所有分支都push</div><div class="line">    git config --global push.default matching</div><div class="line"></div><div class="line">//git status发现 \316\304\261\276\316\304\265\265.txt（必须）</div><div class="line">    git config --global core.quotepath false</div><div class="line">//提交信息编码</div><div class="line">    git config --global i18n.commit.encoding utf-8</div><div class="line">//输出 log 编码</div><div class="line">    git config --global i18n.logoutputencoding utf-8</div><div class="line">//图形界面编码</div><div class="line">    git config --global gui.encoding utf-8</div><div class="line"></div><div class="line">//（手动修改的文件profile）git log 默认使用 less 分页,bash 对 less 命令进行 utf-8 在Git\etc\profile文件中添加：注意=号前后不能有空格</div><div class="line">    export LESSCHARSET=utf-8</div></pre></td></tr></table></figure>
<h2 id="克隆仓库"><a href="#克隆仓库" class="headerlink" title="克隆仓库"></a>克隆仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">//克隆github上的仓库</div><div class="line">    //例如:git@github.com:xyhdl0929/abc.git 采用的是id2_rsa.push公钥,而此公钥在本地采用的域名为n.github.com,那么克隆的时候就改为git@n.github.com:xyhdl0929/abc.git;</div><div class="line">        git clone &lt;仓库ssh地址&gt; &lt;本地新仓库名,可选默认为远程仓库名&gt;</div><div class="line">    //更改远程主机名</div><div class="line">        git clone -o &lt;设置远程主机名,可选忽略时默认为origin&gt; &lt;仓库ssh地址&gt;</div></pre></td></tr></table></figure>
<h2 id="新建立的文件或文件夹"><a href="#新建立的文件或文件夹" class="headerlink" title="新建立的文件或文件夹"></a>新建立的文件或文件夹</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//空的文件夹（不会显示为未跟踪）</div><div class="line">//文件和带有文件的文件夹（显示为未跟踪）</div></pre></td></tr></table></figure>
<h2 id="提交本地仓库"><a href="#提交本地仓库" class="headerlink" title="提交本地仓库"></a>提交本地仓库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//提交所有已改变和已暂存的文件</div><div class="line">git commit -m &quot;提交所有已改变和已暂存的文件&quot; -a</div><div class="line">//提交所有已暂存的文件</div><div class="line">git commit -m &quot;提交所有已暂存的文件&quot;</div><div class="line">//提交指定已暂存的文件</div><div class="line">git commit -m &quot;提交指定已修改的&quot; &lt;文件名&gt;</div></pre></td></tr></table></figure>
<h2 id="添加到已暂存"><a href="#添加到已暂存" class="headerlink" title="添加到已暂存"></a>添加到已暂存</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//新建立的文件,添加到已暂存</div><div class="line">    git add &lt;文件夹或文件&gt;</div><div class="line">//克隆下来的文件,处于已跟踪未暂存（注意：是修改后才可以添加到已暂存）</div><div class="line">    git add &lt;克隆下来的文件夹或文件&gt;</div><div class="line">//添加所有文件和文件夹（包括克隆已修改的文件或文件夹）到已暂存（常用）</div><div class="line">    git add .</div></pre></td></tr></table></figure>
<h2 id="对比文件"><a href="#对比文件" class="headerlink" title="对比文件"></a>对比文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">//对已改变的文件</div><div class="line">    git diff</div><div class="line">//对比已暂存的文件</div><div class="line">    git diff --cached</div></pre></td></tr></table></figure>
<h2 id="更改文件名，如果文件名有空格需要双引号"><a href="#更改文件名，如果文件名有空格需要双引号" class="headerlink" title="更改文件名，如果文件名有空格需要双引号"></a>更改文件名，如果文件名有空格需要双引号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git mv &lt;旧文件名&gt; &lt;新文件名&gt;</div></pre></td></tr></table></figure>
<h2 id="删除本地文件-除了克隆的文件其他都需要经过git-add"><a href="#删除本地文件-除了克隆的文件其他都需要经过git-add" class="headerlink" title="删除本地文件(除了克隆的文件其他都需要经过git add)"></a>删除本地文件(除了克隆的文件其他都需要经过git add)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">//  -r 允许递归删除</div><div class="line">//  -q 不要列出删除的文件（注意:并不是status中列出是在输入命名后列出的内容）</div><div class="line">//  -f 用于删除新建后添加的文件或文件夹不保留在status中</div><div class="line">//删除文件</div><div class="line">    //删除克隆下来的文件（保存在status中)</div><div class="line">        git rm &lt;文件&gt;</div><div class="line">    //删除已暂存区中的文件，（记录不会保存在status中）</div><div class="line">        git rm -f &lt;文件&gt;</div><div class="line"></div><div class="line">//删除文件夹（-r）</div><div class="line">    //删除克隆下来的文件夹、文件（记录保存在status）；</div><div class="line">        git rm -r &lt;文件夹&gt;</div><div class="line">    //删除新建的添加已暂存的文件夹（记录不会保存在status中）</div><div class="line">        git rm -r -f&lt;文件夹&gt;</div><div class="line"></div><div class="line">//移出已跟踪状态不删除文件(文件)，（如果是文件夹添加递归命名-r）</div><div class="line">    git rm --cached &lt;文件&gt;</div><div class="line">    git rm --cached -r &lt;文件夹&gt;</div></pre></td></tr></table></figure>
<h2 id="提交日志"><a href="#提交日志" class="headerlink" title="提交日志"></a>提交日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">//记录所有HEAD的历史, 回退版本时候git log只会显示当前版本之前的记录；对未来版本不会显示所以要用reflog;当前版本始终显示为HEAD&#123;0&#125;，最初的版本显示在最后</div><div class="line">// 183851a HEAD@&#123;0&#125;: commit: 第三次提交</div><div class="line">// 85ce5fd HEAD@&#123;1&#125;: reset: moving to head~1（回退到第一次提交）</div><div class="line">// b69e62a HEAD@&#123;2&#125;: commit: 第二次提交</div><div class="line">// 85ce5fd HEAD@&#123;3&#125;: commit (initial): 第一次提交</div><div class="line"></div><div class="line">git reflog</div><div class="line">//显示当前版本提交之前的所有记录</div><div class="line">git log</div><div class="line">//每次提交中，每个文件加入(insertion)和删除(deletions)的行数(修改一行等同加入一行和删除一行)</div><div class="line">git log --stat</div><div class="line">//改动的详细信息</div><div class="line">git log -p</div><div class="line">//提交记录汇总成一行</div><div class="line">git log --oneline</div><div class="line">//commit的关联分支或者标签</div><div class="line">git log --decorate</div><div class="line">//根据分枝提交历史绘出图像</div><div class="line">git log --graph</div><div class="line">//结合以上三个一起使用最好看</div><div class="line">git log --oneline --decorate --graph</div><div class="line">//查看每个人员的提交信息汇总，按每个提交者名字排序，传入-n参数按每个人的提交次数排序</div><div class="line">git shortlog</div><div class="line">//自定义输出格式：%cn,提交者姓名;%h,hash缩写;%cd,日期</div><div class="line">git log --pretty=format:&quot;%cn committed %h on %cd&quot;</div><div class="line">//过滤提交历史</div><div class="line">//根据数量过滤，最近3条</div><div class="line">git log -3</div><div class="line">//根据日期过滤,--after在日期之后；--before在日期之前</div><div class="line">git log --after=&quot;2017.1.1&quot;</div><div class="line">git log --before=&quot;2017.3.5&quot;</div><div class="line">//按提交者过滤</div><div class="line">git log --author=&quot;aaa&quot;</div><div class="line">//根据文件过滤，筛选某个文件的提交，可传入多个参数</div><div class="line">git log -- 文件名 文件名</div><div class="line">//根据改动过滤，表示某个内容何时加入到文件中；</div><div class="line">git log -S&quot;内容&quot;</div><div class="line">//展示两个分支的不同</div><div class="line">//例如展示两个分支不同的提交；如果backup是master 第一次提交后建立的分支那么</div><div class="line">git log master..backup//显示backup分支后所有的提交</div><div class="line">//当切回到master继续工作后又有了提交</div><div class="line">git log backup..master//那么显示分支master提交后的分支,但不显示master分支的第一提交；</div><div class="line">//过滤合并的信息</div><div class="line">git log --no-merges</div><div class="line">//查看合并的信息</div><div class="line">git log --merges</div></pre></td></tr></table></figure>
<h2 id="回滚操作"><a href="#回滚操作" class="headerlink" title="回滚操作"></a>回滚操作</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">//指定移除哪些文件或文件夹到未跟踪状态；（常用）</div><div class="line">    git reset &lt;文件夹、文件&gt; //推荐使用这个</div><div class="line">//还没提交，把所有已经提交的非克隆下来的文件撤出跟踪状态；对克隆下来的文件经过修改撤出到未跟踪状态保留已修改的内容；</div><div class="line">    git reset head</div><div class="line">    git reset .</div><div class="line">    git reset </div><div class="line"></div><div class="line">//git reset --hard , (对已经使用过git add的)文件或文件名都会清除，对未使用过git add的文件保留；当文件提交后悔产生git log git relog 历史记录</div><div class="line">//回滚到上一个版本，注意head和^之间没有空格</div><div class="line">    git reset head^</div><div class="line">//回滚到上上次版本</div><div class="line">    git reset head^^</div><div class="line">//head最新版本始终是0，共提交了3个版本那么回滚到最初的版本就是2了；（常用）</div><div class="line">    git reset head~2</div><div class="line"></div><div class="line">//查看版本功能具备以下有三个作用</div><div class="line">    //1.新建的文件已暂存没提交状态回到新建文件之前也就该文件消失</div><div class="line">    //2.克隆下来的文件，修改后添加到暂存，使用命令后回到克隆下来的状态，不保留已修改的内容</div><div class="line">    //3.已提交状态，提示当前位置的HEAD版本）</div><div class="line">    git reset --hard</div><div class="line">//回滚的同时指出在哪个版本,共提交了3个版本那么回滚到最初的版本就是2了</div><div class="line">    git reset --hard head~2</div><div class="line">//回滚到未来版本，使用git reflog查看版本号接着git reset --hard &lt;版本号&gt;回到未来（常用）</div><div class="line">    git reset --hard &lt;指定版本号&gt;</div><div class="line"></div><div class="line">//在已暂存中改变的文件进行撤销修改；</div><div class="line">    git checkout &lt;文件名&gt;</div></pre></td></tr></table></figure>
<h2 id="查看分支-所有未跟踪状态和跟踪状态都属于所有分支"><a href="#查看分支-所有未跟踪状态和跟踪状态都属于所有分支" class="headerlink" title="查看分支,所有未跟踪状态和跟踪状态都属于所有分支;"></a>查看分支,所有未跟踪状态和跟踪状态都属于所有分支;</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">//会列出你在本地的分支。你所在的分支的行首会有个星号作标记。 当前分支会用绿色显示（提交后可以查看），书写命令的上一行最后显示当前所在分支</div><div class="line">git branch</div><div class="line">//查看远程分支</div><div class="line">git branch -r</div><div class="line">//查看所有分支(包括本地分支)</div><div class="line">git branch -a</div><div class="line">//查看追踪的远程分支同时知道哈希码</div><div class="line">git branch -vv</div><div class="line">//删除未合并的分支</div><div class="line">git branch -d &lt;分支名&gt;</div><div class="line">//删除已合并的分支，强制删除</div><div class="line">git branch -D &lt;分支名&gt;</div><div class="line">//恢复误删的分支</div><div class="line">git reflog //查看哈希值</div><div class="line">git branch c 版本哈希值(前7位数)//表示某个版本恢复到c分支；</div><div class="line">//重名分支</div><div class="line">git branch -m 旧分支名 新分支名</div><div class="line">git branch -M 旧分支名 新分支名 (如果新分支名已经存在使用这个强制重命名)</div><div class="line">//在本地创建分支</div><div class="line">git branch &lt;新分支名&gt;</div><div class="line">//切换分支,用git branch 查看本地分支的时会看到绿显示;</div><div class="line">git checkout &lt;新分支名&gt;</div><div class="line">//切换分支前需要commit否则无法切换；比如backup分支没提交需要切换到master可以选择stash；可以保存多个状态</div><div class="line">git stash</div><div class="line">//上面已经切换到了master，我们在切回到backup继续工作</div><div class="line">git stash apply</div><div class="line">//查看stash列表</div><div class="line">git stash list</div><div class="line">//清除列表</div><div class="line">git stash clear</div><div class="line">//选择需要恢复的stash列表，只需改变数字即可</div><div class="line">git stash apply stash@&#123;0&#125;</div><div class="line">//创建新分支并立即切换,对于新建立的文件没有提交状态下(也就是未跟踪状态和跟踪状态下)的情况来回切换分支文件还是会显示的,一旦提交了就不会显示了</div><div class="line">git checkout -b &lt;新分支名&gt;</div><div class="line">//本地创建一个新的分支,并让该新的分支与远程主机某个分支建立追踪关系,该分支下的pull和push同步远程分支</div><div class="line">//所取回的更新，在本地主机上要用&quot;远程主机名/分支名&quot;的形式读取</div><div class="line">git checkout -b &lt;新的分支名&gt; 远程主机名/分支名</div></pre></td></tr></table></figure>
<h2 id="远程主机"><a href="#远程主机" class="headerlink" title="远程主机"></a>远程主机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">//列出所有远程主机,默认为origin</div><div class="line">git remote</div><div class="line">//同时查看远程主机对应的仓库地址</div><div class="line">git remote -v </div><div class="line">//查看远程主机的详细信息</div><div class="line">git remote show &lt;远程主机名&gt;</div><div class="line">//添加远程主机,设置远程主机名</div><div class="line">//如果是删除远程主机名后再进行添加的主机,那么该主机没有远程分支;此时可以使用git fetch &lt;远程主机名&gt; master 的分支拉回本地</div><div class="line">git remote add &lt;设置远程主机名&gt; &lt;仓库ssh地址&gt;</div><div class="line">//删除远程主机</div><div class="line">//比如克隆的时候发现域名没更改导致无法提交,这时候可以删除远程主机重新添加远程主机</div><div class="line">git remote rm &lt;远程主机名&gt;</div><div class="line">//远程主机改名</div><div class="line">git remote rename &lt;原主机名&gt; &lt;新主机名&gt;</div></pre></td></tr></table></figure>
<h2 id="远程更新取回本地-默认取回所有分支branch"><a href="#远程更新取回本地-默认取回所有分支branch" class="headerlink" title="远程更新取回本地(默认取回所有分支branch)"></a>远程更新取回本地(默认取回所有分支branch)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">git fetch &lt;远程主机名&gt;</div><div class="line">//取回指定的分支更新</div><div class="line">git fetch &lt;远程主机名&gt; &lt;分支名&gt;</div><div class="line">//把分支名合并到当前分支（常用）</div><div class="line">git merge(或者rebase衍合) &lt;分支名&gt;</div><div class="line">//解决合并时候的冲突，cat打开选择需要保留的文件，HEAD表示当前分支，选择后然后git add git commit -m &apos;&apos;;</div><div class="line">//查看文件</div><div class="line">cat &lt;冲突的文件&gt;</div></pre></td></tr></table></figure>
<h2 id="为版本库创建标签"><a href="#为版本库创建标签" class="headerlink" title="为版本库创建标签"></a>为版本库创建标签</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">//查看所有标签</div><div class="line">git tag </div><div class="line">//新建一个标签，默认为HEAD，也可以指定一个commit id</div><div class="line">git tag &lt;name&gt; </div><div class="line">//推送一个本地标签</div><div class="line">git push origin &lt;tagname&gt; </div><div class="line">//推送全部未推送过的本地标签</div><div class="line">git push origin --tags </div><div class="line">//删除一个本地标签</div><div class="line">git tag -d &lt;tagname&gt; </div><div class="line">//删除一个远程标签</div><div class="line">git push origin :refs/tags/&lt;tagname&gt;</div></pre></td></tr></table></figure>
<h2 id="取回远程主机某个分支的更新，再与本地的指定分支合并"><a href="#取回远程主机某个分支的更新，再与本地的指定分支合并" class="headerlink" title="取回远程主机某个分支的更新，再与本地的指定分支合并"></a>取回远程主机某个分支的更新，再与本地的指定分支合并</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</div><div class="line">//如果远程分支是与当前分支合并，则冒号后面的部分可以省略。</div><div class="line">git pull &lt;远程主机名&gt; &lt;远程分支名&gt;</div><div class="line">//实际过程为</div><div class="line">    git fetch &lt;远程主机名&gt;</div><div class="line">    git merge 远程主机名/分支名</div><div class="line">//git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动&quot;追踪&quot;origin/master分支。</div><div class="line">//就能够看到本地分支跟踪的远程分支</div><div class="line">git branch -vv</div><div class="line">//手动建立追踪关系</div><div class="line">git branch --set-upstream master origin/master//表示指定master分支追踪origin/master   </div><div class="line">//如果合并需要采用rebase模式，可以使用--rebase选项。</div><div class="line">git pull --rebase &lt;远程主机名&gt; &lt;远程分支名&gt;:&lt;本地分支名&gt;</div><div class="line">//参数 -p 就会在本地删除远程已经删除的分支。</div><div class="line">git pull -p</div></pre></td></tr></table></figure>
<h2 id="推送到远程主机"><a href="#推送到远程主机" class="headerlink" title="推送到远程主机"></a>推送到远程主机</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">//将本地分支的更新,推送到远程主机(远程没有分支的时候使用，接着进行追踪分支)</div><div class="line">git push &lt;远程主机名&gt; &lt;本地分支名&gt;:&lt;远程分支名&gt;</div><div class="line">//将本地的master分支推送到远程主机的master</div><div class="line">git push &lt;远程主机名&gt; master</div><div class="line">//本地新建的分支名推送到远程主机，远程主机会自动新建一个新分支名；</div><div class="line">git push &lt;远程主机名&gt; 新分支名</div><div class="line">//省略本地分支分支名,则表示删除指定的远程分支,因为等于推送了一个空的本地分支到远程分支(重要)master不允许删除，其他都可以</div><div class="line">git push &lt;远程主机名&gt; :&lt;远程分支名&gt;</div><div class="line">//当前分支只有一个追踪分支,那么主机名都可以省略</div><div class="line">//‘matching’ 参数是 Git 1.x 的默认行为，其意是如果你执行 git push 但没有指定分支，它将 push 所有你本地的分支到远程仓库中对应匹配的分支。</div><div class="line">//而 Git 2.x 默认的是 simple，意味着执行 git push 没有指定分支时，只有当前分支会被 push 到你使用 git pull 获取的代码。</div><div class="line">//</div><div class="line">git push</div><div class="line">//当前分支与多个主机存在追踪关系,那么可以指定默认主机,以后就可以直接git push</div><div class="line">git push -u &lt;默认主机&gt; &lt;本地分支&gt;</div><div class="line">//不管是否存在对应的远程分支,将本地的所有分支都推送到远程主机,-all;</div><div class="line">git push --all &lt;主机名&gt;</div><div class="line">//远程主机版本比本地的更新,推送的时候会报错,要求先在本地做git pull合并差异，然后再推送到远程主机。如果一定要推送那么可以使用;</div><div class="line">//如果发现第一次推送错误，回滚操作后使用git push -f强推覆盖远程主机错误的版本</div><div class="line">git push -f &lt;主机名&gt;</div><div class="line">//推送的时候出错，原因是远程分支比本地的分支更新，那么必须先把远程的分支git pull 取回与当前分支合并后，才使用git push;</div><div class="line">git pull</div><div class="line">git push</div><div class="line">//推送标签(默认是不推送标签的)</div><div class="line">git push &lt;主机名&gt; --tags</div><div class="line">//更新所有远程分支</div><div class="line">git branch | awk &apos;BEGIN&#123;print &quot;echo ****Update all local branch...@daimon***&quot;&#125;&#123;if($1==&quot;*&quot;)&#123;current=substr($0,3)&#125;;print a&quot;git checkout &quot;substr($0,3);print &quot;git pull --all&quot;;&#125;END&#123;print &quot;git checkout &quot; current&#125;&apos; |sh</div><div class="line"></div><div class="line">//是否禁用强制功能-f;</div><div class="line">git config receive.denyNonFastForwards false</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 辅助工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[git安装过程需注意的地方]]></title>
      <url>/2017/06/17/git%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E9%9C%80%E6%B3%A8%E6%84%8F%E7%9A%84%E5%9C%B0%E6%96%B9/</url>
      <content type="html"><![CDATA[<h2 id="集中式版本库-（SVN或CVS）"><a href="#集中式版本库-（SVN或CVS）" class="headerlink" title="集中式版本库 （SVN或CVS）"></a>集中式版本库 （SVN或CVS）</h2><p>版本库是集中存放在中央服务器的,修改项目需要先从服务器取得最新版本,然后修改,再将修改的版本提交到服务器(一旦服务器坏了整个项目有可能丢失所有历史更新记录)(需要联网);</p>
<h2 id="分布式版本库（Git）"><a href="#分布式版本库（Git）" class="headerlink" title="分布式版本库（Git）"></a>分布式版本库（Git）</h2><p>每个客户端都是完整的版本库,只要把修改的内容推送到服务器上即可,某个人电脑坏了,其他人也会保存有,不需担心(不需要联网);<br>版本控制–增删改查;协同工作–多个开发者共同开发相互独立;</p>
<p>##安装过程</p>
<h3 id="在“Adjusting-your-PATH-environment”选项中，默认即可。"><a href="#在“Adjusting-your-PATH-environment”选项中，默认即可。" class="headerlink" title="在“Adjusting your PATH environment”选项中，默认即可。"></a>在“Adjusting your PATH environment”选项中，默认即可。</h3><p>选择Run Git and includedUnix TOOLS ….(安装msysgit时选择将其集成到Windows中)<br>主要用于解决:使用git pull来与远程服务器同步，此时就发现Sublime下面的状态栏就会一直来回摆动，无法与远程同步，</p>
<h3 id="Configuring-the-line-ending-conversions选项中选择"><a href="#Configuring-the-line-ending-conversions选项中选择" class="headerlink" title="Configuring the line ending conversions选项中选择"></a>Configuring the line ending conversions选项中选择</h3><p>第一个选项：如果是跨平台项目，在windows系统安装，选择；<br>第二个选项：如果是跨平台项目，在Unix系统安装，选择；<br>第三个选项：非跨平台项目，选择。</p>
<h3 id="use-minTTY-the-default-terminal-of-msy32"><a href="#use-minTTY-the-default-terminal-of-msy32" class="headerlink" title="use minTTY (the default terminal of msy32)"></a>use minTTY (the default terminal of msy32)</h3><h3 id="推荐：默认开启文件缓存-打上勾"><a href="#推荐：默认开启文件缓存-打上勾" class="headerlink" title="推荐：默认开启文件缓存(打上勾)"></a>推荐：默认开启文件缓存(打上勾)</h3><p><code>enable file system caching;</code>  </p>
<h3 id="环境变量-D-Program-Files-Git-bin-添加到path"><a href="#环境变量-D-Program-Files-Git-bin-添加到path" class="headerlink" title="环境变量:D:\Program Files\Git\bin 添加到path"></a>环境变量:D:\Program Files\Git\bin 添加到path</h3><p>现在可以在sublime中使用git相关命令了;</p>
<h3 id="动画详情"><a href="#动画详情" class="headerlink" title="动画详情"></a>动画详情</h3><p><img src="/images/git-install.gif" alt="git安装动画" title="git安装过程"></p>
]]></content>
      
        <categories>
            
            <category> 辅助工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[sublime下载、安装、绿化]]></title>
      <url>/2017/06/17/sublime%E4%B8%8B%E8%BD%BD%E3%80%81%E5%AE%89%E8%A3%85%E3%80%81%E7%BB%BF%E5%8C%96/</url>
      <content type="html"><![CDATA[<h1 id="稳定版"><a href="#稳定版" class="headerlink" title="稳定版"></a>稳定版</h1><p><a href="https://www.sublimetext.com/3" target="_blank" rel="external">Sublime Text3 3126</a></p>
<p><img src="/images/sb-1.png"></p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="封装成便携包"><a href="#封装成便携包" class="headerlink" title="封装成便携包"></a>封装成便携包</h2><p>因为sublime text插件默认安装的位置是AppData的目录【C:\Users\用户名\AppData\Roaming\Sublime Text 3\Packages】，也就是在C盘,所以我们在官方下载完软件并选择安装在<code>D:\Program Files\Sublime Text 3126</code>，把<code>Sublime Text 3126</code>文件夹打包成压缩包，接着卸载sublime软件，把刚才压缩包解压到<code>D:\Program Files\Sublime Text 3126</code>下，然后在里面添加一个<code>data</code>文件夹打开软件即可完成！</p>
<h2 id="各个文件夹的作用"><a href="#各个文件夹的作用" class="headerlink" title="各个文件夹的作用"></a>各个文件夹的作用</h2><p>data文件夹下<code>Cache</code>（缓存文件）,<code>Index</code>（日志文件）,<code>Installed Packages</code>（插件包，下载下来的文件后缀为<code>.sublime-package</code>）,<code>Local</code>（许可证书）,<code>Packages</code>（解压出来的插件包，或是一些配置文件）后面三个都是重要的其他两个可以删除；</p>
<h2 id="绿化"><a href="#绿化" class="headerlink" title="绿化"></a>绿化</h2><p> 打开Sublime菜单然后复制下面的代码粘贴到 &gt; help &gt; enter License<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">—– BEGIN LICENSE —–</div><div class="line">Michael Barnes</div><div class="line">Single User License</div><div class="line">EA7E-821385</div><div class="line">8A353C41 872A0D5C DF9B2950 AFF6F667</div><div class="line">C458EA6D 8EA3C286 98D1D650 131A97AB</div><div class="line">AA919AEC EF20E143 B361B1E7 4C8B7F04</div><div class="line">B085E65E 2F5F5360 8489D422 FB8FC1AA</div><div class="line">93F6323C FD7F7544 3F39C318 D95E6480</div><div class="line">FCCC7561 8A4A1741 68FA4223 ADCEDE07</div><div class="line">200C25BE DBBC4855 C4CFB774 C5EC138C</div><div class="line">0FEC1CEF D9DCECEC D3A5DAD1 01316C36</div><div class="line">—— END LICENSE ——</div></pre></td></tr></table></figure></p>
<hr>
<h1 id="开发版"><a href="#开发版" class="headerlink" title="开发版"></a>开发版</h1><p><a href="https://www.sublimetext.com/3dev" target="_blank" rel="external">Sublime Text3 3136</a><br>注意：需要购买后才可以使用<br>到目前为止经历了10个版本:<br>3127–&gt;3128–&gt;3129–&gt;3130–&gt;3131–&gt;3132–&gt;3133–&gt;3134–&gt;3135–&gt;3136</p>
<hr>
<h1 id="价格"><a href="#价格" class="headerlink" title="价格"></a>价格</h1><p>2017年6月15日汇率1$美元=￥6.804人民币，官方价格为$70美元即人民币￥476.518元<br>地址：<a href="https://www.sublimetext.com/buy?v=3" target="_blank" rel="external">https://www.sublimetext.com/buy?v=3</a></p>
]]></content>
      
        <categories>
            
            <category> 编程工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sublime3 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Markdown 语法手册]]></title>
      <url>/2017/06/14/markdown/</url>
      <content type="html"><![CDATA[<h1 id="斜体和粗体"><a href="#斜体和粗体" class="headerlink" title="斜体和粗体"></a>斜体和粗体</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*斜体*或_斜体_</div><div class="line">**粗体**</div><div class="line">***加粗斜体***</div><div class="line">~~删除线~~</div></pre></td></tr></table></figure>
<p><em>斜体</em>或<em>斜体</em><br><strong>粗体</strong><br><strong><em>加粗斜体</em></strong><br><del>删除线</del></p>
<hr>
<h1 id="分级标题"><a href="#分级标题" class="headerlink" title="分级标题"></a>分级标题</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># 分级标题</div><div class="line">## 二级标题</div><div class="line">### 三级标题</div><div class="line">#### 四级标题</div><div class="line">##### 五级标题</div><div class="line">###### 六级标题</div></pre></td></tr></table></figure>
<h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><hr>
<h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><h2 id="行内式"><a href="#行内式" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[我的博客](http://hedonglin.com)</div><div class="line">[我的博客](http://hedonglin.com &quot;标题提示&quot;)</div></pre></td></tr></table></figure>
<p><a href="http://hedonglin.com">我的博客</a><br><a href="http://hedonglin.com" title="标题提示">我的博客</a></p>
<h2 id="参考式"><a href="#参考式" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">我的网站[博客][1]、[博客2][2]、[笔记][3]还有个特殊的描述[百度][];</div><div class="line">[1]:http:hedonglin.com &quot;hedonglin博客&quot;</div><div class="line">[2]:http:hedonglin.com &quot;资源博客&quot;</div><div class="line">[3]:http:www.hedonglin.com &quot;www资源博客&quot;</div><div class="line">[百度]:htttp://www.baidu.com &quot;百度&quot;</div></pre></td></tr></table></figure>
<p>我的网站<a href="http://hedonglin.com" title="hedonglin博客">博客</a>、<a href="http://hedonglin.com" title="资源博客">博客2</a>、<a href="http://www.hedonglin.com" title="www资源博客" target="_blank" rel="external">笔记</a>还有个特殊的描述<a href="https://www.baidu.com" title="百度" target="_blank" rel="external">百度</a>;</p>
<hr>
<h1 id="自动连接"><a href="#自动连接" class="headerlink" title="自动连接"></a>自动连接</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;http://www.youku.com&gt;</div><div class="line">&lt;http://hedonglin.com&gt;</div><div class="line">&lt;hedonglin@163.com&gt;</div></pre></td></tr></table></figure>
<p><a href="http://www.youku.com" target="_blank" rel="external">http://www.youku.com</a><br><a href="http://hedonglin.com">http://hedonglin.com</a><br><a href="&#109;&#x61;&#x69;&#x6c;&#116;&#x6f;&#58;&#104;&#101;&#x64;&#111;&#x6e;&#103;&#108;&#105;&#110;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;">&#104;&#101;&#x64;&#111;&#x6e;&#103;&#108;&#105;&#110;&#x40;&#x31;&#x36;&#x33;&#46;&#x63;&#x6f;&#109;</a></p>
<hr>
<h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[锚点](#jump)</div><div class="line">&lt;span id = &quot;jump&quot;&gt;跳转到这里&lt;/span&gt;</div></pre></td></tr></table></figure>
<p><a href="#jump">锚点</a><br><span id="jump">跳转到这里</span></p>
<hr>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><h2 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">注意：*号后面带一个空格</div><div class="line">* 无序列表1</div><div class="line">* 无序列表2</div><div class="line">* 无序列表3</div><div class="line">- 列表1</div><div class="line">- 列表2</div><div class="line">- 列表3</div><div class="line">+ 列表1111</div><div class="line">+ 列表2222</div><div class="line">+ 列表3333</div></pre></td></tr></table></figure>
<ul>
<li>无序列表1</li>
<li>无序列表2</li>
<li>无序列表3</li>
</ul>
<ul>
<li>列表1</li>
<li>列表2</li>
<li>列表3</li>
</ul>
<ul>
<li>列表1111</li>
<li>列表2222</li>
<li>列表3333</li>
</ul>
<h2 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注意：.号后面带一个空格</div><div class="line">1. 列表1</div><div class="line">2. 列表2</div><div class="line">3. 列表3</div></pre></td></tr></table></figure>
<ol>
<li>列表1</li>
<li>列表2</li>
<li>列表3</li>
</ol>
<hr>
<h1 id="列表缩进"><a href="#列表缩进" class="headerlink" title="列表缩进"></a>列表缩进</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">注意：*号后面至少一个空格</div><div class="line">* 窗前明月光，疑是地上霜。</div><div class="line">举头望明月，低头思故乡。</div></pre></td></tr></table></figure>
<ul>
<li>窗前明月光，疑是地上霜。<br>举头望明月，低头思故乡。</li>
</ul>
<hr>
<h1 id="包含段落的列表"><a href="#包含段落的列表" class="headerlink" title="包含段落的列表"></a>包含段落的列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注意：分段之后也就是（&quot;举&quot;的前面至少要一个空格）</div><div class="line">* 窗前明月光，疑是地上霜。</div><div class="line"></div><div class="line"> 举头望明月，低头思故乡。</div></pre></td></tr></table></figure>
<ul>
<li><p>窗前明月光，疑是地上霜。</p>
<p>举头望明月，低头思故乡。</p>
</li>
</ul>
<hr>
<h1 id="包含引用的列表"><a href="#包含引用的列表" class="headerlink" title="包含引用的列表"></a>包含引用的列表</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注意：*号和&gt;后面都带空格</div><div class="line">* 阅读的方法:</div><div class="line">&gt; 打开书本。</div><div class="line">&gt; 打开电灯。</div></pre></td></tr></table></figure>
<ul>
<li>阅读的方法:<blockquote>
<p>打开书本。<br>打开电灯。</p>
</blockquote>
</li>
</ul>
<hr>
<h1 id="包含代码区块的引用"><a href="#包含代码区块的引用" class="headerlink" title="包含代码区块的引用"></a>包含代码区块的引用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">注意：缩进了2个制表符8个空格</div><div class="line">        &lt;代码写在这&gt;</div></pre></td></tr></table></figure>
<pre><code>&lt;代码写在这&gt;
</code></pre><hr>
<h1 id="一个特殊情况"><a href="#一个特殊情况" class="headerlink" title="一个特殊情况"></a>一个特殊情况</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">注意：数字后面如果带.那么就要跟一个\进行转义否则1986.就不会显示</div><div class="line">1986\. What a great season.</div></pre></td></tr></table></figure>
<p>1986. What a great season.</p>
<hr>
<h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">注意：在开头添加&gt;就变成引用了，最好在&gt;后加一个空格</div><div class="line">&gt; 这就是引用</div><div class="line">这就是引用</div><div class="line"></div><div class="line">&gt;这就是引用</div><div class="line">这就是引用</div></pre></td></tr></table></figure>
<blockquote>
<p>这就是引用<br>这就是引用</p>
<p>这就是引用<br>这就是引用</p>
<hr>
</blockquote>
<h1 id="引用的多层嵌套"><a href="#引用的多层嵌套" class="headerlink" title="引用的多层嵌套"></a>引用的多层嵌套</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">注意：每段都隔一行，并且符号逐个减少</div><div class="line">&gt;&gt;&gt; 请问 Markdwon 怎么用？ - 小白</div><div class="line"></div><div class="line">&gt;&gt; 自己看教程！ - 愤青</div><div class="line"></div><div class="line">&gt; 教程在哪？ - 小白</div></pre></td></tr></table></figure>
<blockquote>
<blockquote>
<blockquote>
<p>请问 Markdwon 怎么用？ - 小白</p>
</blockquote>
<p>自己看教程！ - 愤青</p>
</blockquote>
<p>教程在哪？ - 小白</p>
<hr>
</blockquote>
<h1 id="引用其它要素"><a href="#引用其它要素" class="headerlink" title="引用其它要素"></a>引用其它要素</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">&gt; 1.   这是第一行列表项。</div><div class="line">2.   这是第二行列表项。</div><div class="line"></div><div class="line">&gt; 给出一些例子代码：</div><div class="line"></div><div class="line">&gt;     return shell_exec(&quot;echo $input | $markdown_script&quot;);</div></pre></td></tr></table></figure>
<blockquote>
<ol>
<li>这是第一行列表项。</li>
<li>这是第二行列表项。</li>
</ol>
<p>给出一些例子代码：</p>
<pre><code>return shell_exec(&quot;echo $input | $markdown_script&quot;);
</code></pre></blockquote>
<hr>
<h1 id="插入图像"><a href="#插入图像" class="headerlink" title="插入图像"></a>插入图像</h1><h2 id="行内式-1"><a href="#行内式-1" class="headerlink" title="行内式"></a>行内式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注意：文章多的时候一般图片采用绝对路径，查找方便不易丢失,第三种方式可以改变大小</div><div class="line">![图片alt内容](/images/avatar.png)</div><div class="line">![图片alt内容](/images/avatar.png &quot;图片title&quot;)</div><div class="line">&lt;img src=&quot;/images/avatar.png&quot; alt=&quot;图片&quot; /&gt;</div></pre></td></tr></table></figure>
<p><img src="/images/avatar.png" alt="图片alt内容"><br><img src="/images/avatar.png" alt="图片alt内容" title="图片title"><br><img src="/images/avatar.png" alt="图片" width="100" height="100"></p>
<h2 id="参考式-1"><a href="#参考式-1" class="headerlink" title="参考式"></a>参考式</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">![图片alt内容][flower]</div><div class="line">[flower]:/images/avatar.png &quot;图片title&quot;</div></pre></td></tr></table></figure>
<p><img src="/images/avatar.png" alt="图片alt内容" title="图片title"></p>
<hr>
<h1 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">注意都需要脚注之间都要隔一行，此在next的markdown下没效果</div><div class="line">今天[^1]的日子[^2]很灿烂[^Le]</div><div class="line"></div><div class="line">[^1]:你是谁</div><div class="line"></div><div class="line">[^2]:我是谁</div><div class="line"></div><div class="line">[^Le]:到底是谁</div></pre></td></tr></table></figure>
<p>今天<a href="你是谁">^1</a>的日子<a href="我是谁">^2</a>很灿烂<a href="到底是谁">^Le</a></p>
<hr>
<h1 id="LaTeX-公式"><a href="#LaTeX-公式" class="headerlink" title="LaTeX 公式"></a>LaTeX 公式</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">注意:此在next的markdown下没效果</div><div class="line">$$\sum_&#123;i=1&#125;^n a_i=0$$</div><div class="line"></div><div class="line">$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</div><div class="line"></div><div class="line">$$\sum^&#123;j-1&#125;_&#123;k=0&#125;&#123;\widehat&#123;\gamma&#125;_&#123;kj&#125; z_k&#125;$$</div></pre></td></tr></table></figure>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
<hr>
<h1 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">flow</div><div class="line">st=&gt;start: Start:&gt;https://www.zybuluo.com</div><div class="line">io=&gt;inputoutput: verification</div><div class="line">op=&gt;operation: Your Operation</div><div class="line">cond=&gt;condition: Yes or No?</div><div class="line">sub=&gt;subroutine: Your Subroutine</div><div class="line">e=&gt;end</div><div class="line">st-&gt;io-&gt;op-&gt;cond</div><div class="line">cond(yes)-&gt;e</div><div class="line">cond(no)-&gt;sub-&gt;io</div></pre></td></tr></table></figure>
<p>flow<br>st=&gt;start: Start:&gt;<a href="https://www.zybuluo.com" target="_blank" rel="external">https://www.zybuluo.com</a><br>io=&gt;inputoutput: verification<br>op=&gt;operation: Your Operation<br>cond=&gt;condition: Yes or No?<br>sub=&gt;subroutine: Your Subroutine<br>e=&gt;end<br>st-&gt;io-&gt;op-&gt;cond<br>cond(yes)-&gt;e<br>cond(no)-&gt;sub-&gt;io</p>
<hr>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">注意：第二行为不同的列指定对齐方向。默认为左对齐，在-右边加上:就右对齐。-的两边都加:那么就是居中对齐</div><div class="line">学号|姓名|分数</div><div class="line">-|-|-</div><div class="line">小明|男|75</div><div class="line">小红|女|79</div><div class="line">小陆|男|92</div><div class="line"></div><div class="line">学号|姓名|分数</div><div class="line">-:|-:|-:</div><div class="line">小明|男|75</div><div class="line">小红|女|79</div><div class="line">小陆|男|92</div><div class="line"></div><div class="line">学号|姓名|分数</div><div class="line">:-:|:-:|:-:</div><div class="line">小明|男|75</div><div class="line">小红|女|79</div><div class="line">小陆|男|92</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>学号</th>
<th>姓名</th>
<th>分数</th>
</tr>
</thead>
<tbody>
<tr>
<td>小明</td>
<td>男</td>
<td>75</td>
</tr>
<tr>
<td>小红</td>
<td>女</td>
<td>79</td>
</tr>
<tr>
<td>小陆</td>
<td>男</td>
<td>92</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:right">学号</th>
<th style="text-align:right">姓名</th>
<th style="text-align:right">分数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:right">小明</td>
<td style="text-align:right">男</td>
<td style="text-align:right">75</td>
</tr>
<tr>
<td style="text-align:right">小红</td>
<td style="text-align:right">女</td>
<td style="text-align:right">79</td>
</tr>
<tr>
<td style="text-align:right">小陆</td>
<td style="text-align:right">男</td>
<td style="text-align:right">92</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th style="text-align:center">学号</th>
<th style="text-align:center">姓名</th>
<th style="text-align:center">分数</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">小明</td>
<td style="text-align:center">男</td>
<td style="text-align:center">75</td>
</tr>
<tr>
<td style="text-align:center">小红</td>
<td style="text-align:center">女</td>
<td style="text-align:center">79</td>
</tr>
<tr>
<td style="text-align:center">小陆</td>
<td style="text-align:center">男</td>
<td style="text-align:center">92</td>
</tr>
</tbody>
</table>
<hr>
<h1 id="分隔线"><a href="#分隔线" class="headerlink" title="分隔线"></a>分隔线</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">*****</div><div class="line"></div><div class="line">* * * </div><div class="line"></div><div class="line">- - - </div><div class="line"></div><div class="line">-----</div></pre></td></tr></table></figure>
<hr>
<hr>
<hr>
<hr>
<hr>
<h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">注意：有三种方式</div><div class="line">        两个制表符8个空格</div><div class="line">我是一个`行内式`的代码</div><div class="line">6个`包裹多行代码</div></pre></td></tr></table></figure>
<pre><code>两个制表符8个空格
</code></pre><p>我是一个<code>行内式</code>的代码<br>6个`包裹多行代码</p>
<hr>
<h1 id="内容目录"><a href="#内容目录" class="headerlink" title="内容目录"></a>内容目录</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">在段落中填写 [TOC] 以显示全文内容的目录结构，但此处没效果！</div></pre></td></tr></table></figure>
<p>[TOC]</p>
]]></content>
      
        <categories>
            
            <category> 文档知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
